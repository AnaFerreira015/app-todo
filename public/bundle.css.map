{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Tasks/Task.svelte"
  ],
  "sourcesContent": [
    "<script>\n   import { onMount } from \"svelte\";\n   import TaskGridItem from \"./TaskGridItem.svelte\";\n   let tasks = [];\n   let newDescription = \"\";\n   let id = null;\n   let validDescription = false;\n   $: validDescription = newDescription.trim().length >= 5; // declaração reativa\n \n    onMount(() => {\n        getTasks();\n    });\n    function getTasks() {\n        fetch(\"https://app-todo-b369f.firebaseio.com/tasks.json\")\n            .then(response => {\n                if (!response.ok) {\n                    throw new error(\"An error occurred, please try again!\");\n                }\n                return response.json();\n            })\n            .then(data => {\n                for (const key in data) {\n                    tasks = [...tasks, { id: key, description: data[key].description }];\n                    console.table(tasks);\n                }\n            })\n            .catch(error => console.log(error));\n    }\n\n    function newTask() {\n        id = null;\n        newDescription = \"\";\n        document.getElementById(\"newDescriptionId\").focus();\n    }\n\n    function submitTask() {\n        id ? updateTask() : insertTask();\n    }\n \n    function insertTask() {\n    const taskData = { description: newDescription };\n    \n    fetch(\"https://app-todo-b369f.firebaseio.com/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify(taskData),\n        headers: { \"Content-Type\": \"application/json\" }\n    })\n    \n        .then(response => {\n            if (!response.ok) {\n                throw new error(\"An error occurred, please try again!\");\n            }\n            return response.json();\n        })\n    \n        .then(data => {\n            tasks = [...tasks, { id: data.name, description: newDescription }];\n            newTask();\n        })\n        .catch(error => console.log(error));\n    }\n\n    function updateTask() {\n        const taskData = { description: newDescription };\n \n        fetch(`https://app-todo-b369f.firebaseio.com/tasks/${id}.json`, {\n            method: \"PATCH\",\n            body: JSON.stringify(taskData),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw new error(\"An error occurred, please try again!\");\n            }\n            const index = tasks.findIndex(task => task.id === id);\n            tasks[index] = { id: id, description: newDescription };\n            newTask();\n        })\n        .catch(error => console.log(error));\n    } \n\n    function editTask(event) {\n        id = event.detail.id;\n        newDescription = event.detail.description;\n    }\n\n    function deleteTask(event) {\n        id = event.detail.id;\n        fetch(`https://app-todo-b369f.firebaseio.com/tasks/${id}.json`, {\n            method: \"DELETE\"\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw new error(\"An error occurred, please try again!\");\n            }\n            tasks = tasks.filter(task => task.id !== event.detail.id);\n            newTask();\n        })\n        .catch(error => console.log(error));\n    }\n</script>\n\n    <style>\n        h4 {\n            margin-top: 1em;\n        }\n \n        /* .adding-record {\n            color: darkblue;\n        } */\n</style>\n\n<div class=\"container\">\n\t<div class=\"notification\" style=\"margin-top: 2%;\">\n\t\t<!-- form -->\n\t\t<div class=\"field is-horizontal\">\n\t\t\t<div class=\"field-label is-normal\">\n\t\t\t\t<label class=\"label\">Task</label>\n\t\t\t</div>\n\t\t\t<div class=\"field-body\">\n\t\t\t\t<div class=\"field\">\n\t\t\t\t\t<p class=\"control is-expanded has-icons-left\">\n\t\t\t\t\t\t<input id=\"newDescriptionId\" bind:value={newDescription} class=\"input\" type=\"text\" placeholder=\"Enter new task...\" />\n\t\t\t\t\t\t<span class=\"icon is-small is-left\">\n\t\t\t\t\t\t\t<i class=\"fas fa-tasks\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<!-- Buttons -->\n\t\t\t\t<div class=\"field is-grouped\">\n\t\t\t\t\t<div class=\"control\">\n\t\t\t\t\t\t<button class=\"button is-normal\" on:click={newTask}>New</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"control\">\n                        <button class=\"button is-info\" on:click={submitTask} disabled={!validDescription}>\n                            <span class=\"icon is-small\">\n                                <i class=\"fas fa-check\" />\n                            </span>\n                            <span>Save</span>\n                        </button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- Binding -->\n\t\t<!-- <div class=\"field is-horizontal\">\n\t\t\t<div class=\"field-label adding-record\">Track a task:</div>\n\t\t\t<div class=\"field-body\">\n\t\t\t\t<div class=\"field\">\n\t\t\t\t\t<div class=\"control\">{newDescription}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div> -->\n\t</div>\n</div>\n<!-- grid -->\n<div class=\"container\">\n <h4 class=\"title is-4\" style=\"color: black;\">Tasks</h4>\n <table class=\"table is-bordered is-striped is-hoverable\">\n   <thead>\n     <tr>\n       <th>Task Description</th>\n       <th>Edit</th>\n       <th>Delete</th>\n     </tr>\n   </thead>\n   <tbody>\n        {#each tasks as task (task.id)}\n            <TaskGridItem \n                id={task.id} \n                description={task.description} \n                on:edit={editTask} \n                on:delete={deleteTask} /> \n        {:else}\n            <tr>\n                <td>No tasks.<i class=\"fas fa-sad-tear\" /></td>\n            </tr> \n        {/each}\n   </tbody>\n </table>\n</div>"
  ],
  "names": [],
  "mappings": "AAuGQ,EAAE,eAAC,CAAC,AACA,UAAU,CAAE,GAAG,AACnB,CAAC"
}